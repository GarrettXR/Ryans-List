<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>ryans_list</string>
			<key>host</key>
			<string>localhost</string>
			<key>name</key>
			<string>localhost</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPSocketConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentFilter</key>
			<dict/>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGPT5YJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK8QDwcIFRYXGBkfICEoLDA1OlUkbnVs
			bNMJCgsMEBRXTlMua2V5c1pOUy5vYmplY3RzViRjbGFzc6MNDg+A
			AoADgASjERITgAWABoAKgA5UdHlwZVRyb3dzVGtleXNfECZTZWxl
			Y3Rpb25EZXRhaWxUeXBlUHJpbWFyeUtleWVkRGV0YWlsc9MJCgsa
			HB6hG4AHoR2ACIAJUjI0CdIiIyQlWiRjbGFzc25hbWVYJGNsYXNz
			ZXNfEBNOU011dGFibGVEaWN0aW9uYXJ5oyQmJ1xOU0RpY3Rpb25h
			cnlYTlNPYmplY3TSCgspK6EqgAuADdILLS4vWU5TLnN0cmluZ4AM
			Umlk0iIjMTJfEA9OU011dGFibGVTdHJpbmejMTM0WE5TU3RyaW5n
			WE5TT2JqZWN00iIjNjdeTlNNdXRhYmxlQXJyYXmjNjg5V05TQXJy
			YXlYTlNPYmplY3TSIiMmO6ImPFhOU09iamVjdF8QD05TS2V5ZWRB
			cmNoaXZlctE/QFRkYXRhgAEACAARABoAIwAtADIANwBJAE8AVgBe
			AGkAcAB0AHYAeAB6AH4AgACCAIQAhgCLAJAAlQC+AMUAxwDJAMsA
			zQDPANIA0wDYAOMA7AECAQYBEwEcASEBIwElAScBLAE2ATgBOwFA
			AVIBVgFfAWgBbQF8AYABiAGRAZYBmQGiAbQBtwG8AAAAAAAAAgEA
			AAAAAAAAQQAAAAAAAAAAAAAAAAAAAb4=
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{1, 0}, {1047, 574}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>table</key>
			<string>categories</string>
			<key>view</key>
			<string>SP_VIEW_CONTENT</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>-- Find the first 10 sorted alphabetically

SELECT movies.id, movies.title, movies.genres
FROM movies
ORDER BY movies.title
LIMIT 10</string>
		<string>-- Find the id (only that column) of the movie Made in America (1993)

SELECT movies.id
FROM movies
WHERE movies.title = 'Made in America (1993)'</string>
		<string>SELECT movies.id, movies.title, movies.genres
FROM movies 
WHERE movies.id = 485</string>
		<string>SELECT movies.id, movies.title
FROM movies
LIMIT 10</string>
		<string>-- Select all columns and rows from the movies table
-- Select only the title and id of the first 10 rows
-- Find the movie with the id of 485
-- Find the id (only that column) of the movie Made in America (1993)
-- Find the first 10 sorted alphabetically
-- Find all movies from 2002
-- Find out what year the Godfather came out
-- Without using joins find all the comedies
-- Find all comedies in the year 2000
-- Find any movies that are about death and are a comedy
-- Find any movies from either 2001 or 2002 with a title containing super
-- Create a new table called actors (We are going to pretend the actor can only play in one movie). The table should include name, character name, foreign key to movies and date of birth at least plus an id field.
-- Pick 3 movies and create insert statements for 10 actors each. You should use the multi value insert statements
-- Create a new column in the movie table to hold the MPAA rating. UPDATE 5 different movies to their correct rating

SELECT movies.id, movies.title, movies.genres
FROM movies</string>
		<string>-- Select all columns and rows from the movies table
-- Select only the title and id of the first 10 rows
-- Find the movie with the id of 485
-- Find the id (only that column) of the movie Made in America (1993)
-- Find the first 10 sorted alphabetically
-- Find all movies from 2002
-- Find out what year the Godfather came out
-- Without using joins find all the comedies
-- Find all comedies in the year 2000
-- Find any movies that are about death and are a comedy
-- Find any movies from either 2001 or 2002 with a title containing super
-- Create a new table called actors (We are going to pretend the actor can only play in one movie). The table should include name, character name, foreign key to movies and date of birth at least plus an id field.
-- Pick 3 movies and create insert statements for 10 actors each. You should use the multi value insert statements
-- Create a new column in the movie table to hold the MPAA rating. UPDATE 5 different movies to their correct rating

SELECT movies.id, movies.title, movies.genres
FROM movies
WHERE movies</string>
		<string>-- Select all columns and rows from the movies table
-- Select only the title and id of the first 10 rows
-- Find the movie with the id of 485
-- Find the id (only that column) of the movie Made in America (1993)
-- Find the first 10 sorted alphabetically
-- Find all movies from 2002
-- Find out what year the Godfather came out
-- Without using joins find all the comedies
-- Find all comedies in the year 2000
-- Find any movies that are about death and are a comedy
-- Find any movies from either 2001 or 2002 with a title containing super
-- Create a new table called actors (We are going to pretend the actor can only play in one movie). The table should include name, character name, foreign key to movies and date of birth at least plus an id field.
-- Pick 3 movies and create insert statements for 10 actors each. You should use the multi value insert statements
-- Create a new column in the movie table to hold the MPAA rating. UPDATE 5 different movies to their correct rating

SELECT movies.id, movies.title, movies.genre
FROM movies
WHERE movies</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.21</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
